plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/mysticalagriculture.accesswidener")
	runs {
		//
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagenClient"
		//
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=${modid}"

			runDir "build/datagen"
		}
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me/"
    }

	maven {
		name = "Jitpack"
		url = 'https://jitpack.io'
	}

	maven {
		name = "Curse"
		url = "https://www.cursemaven.com"
	}

	maven {
		name = "BlameJared Maven'"
		url = "https://maven.blamejared.com"
	}

	mavenCentral()
	mavenLocal()

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	
	modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")
	
	include modImplementation ("draylar:magna:${project.magna_version}") {
        exclude group: "net.fabricmc"
        exclude group: "com.jamieswhiteshirt"
        exclude group: "me.shedaniel.cloth"
		exclude group: "io.github.prospector", module: "modmenu"
	}

	//Almost Unified
	modApi("com.almostreliable.mods:almostunified-fabric:1.19.4-0.4.1")

	include modApi('teamreborn:energy:3.0.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation 'com.electronwill.night-config:core:3.6.6'
	include "com.electronwill.night-config:core:3.6.6"
	modImplementation 'com.electronwill.night-config:toml:3.6.6'
	include "com.electronwill.night-config:toml:3.6.6"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/generated/resources'
			]
		}
	}
}